<?xml version="1.0" encoding="UTF-8"?>
<configuration status="INFO">
	<Properties>
		<!-- 配置日志文件输出目录 -->
		<Property name="LOG_HOME">./logs</Property>
		<property name="log_pattern"> [%d{yyyy-MM-dd HH:mm:ss,SSS}] %l %m%n
		</property>
	</Properties>
	
	
	<appenders>
		<Console name="consolePrint" target="SYSTEM_OUT">
			<PatternLayout pattern="${log_pattern}" />
		</Console>
		<File name="File" fileName="logs/app.log">
			<PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" />
		</File>
	</appenders>
	<loggers>
		<root level="info">
			<appender-ref ref="consolePrint" />
			<appender-ref ref="File" />
		</root>
	</loggers>
</configuration>

<!-- [%d{yy-MM-dd HH:mm:ss}] %-5p %2r [%t] %c %l %m%n -->
<!-- %c 列出logger名字空间的全称，如果加上{<层数>}表示列出从最内层算起的指定层数的名字空间 %C 列出调用logger的类的全名（包含包路径） 
	假设当前类是"org.apache.xyz.SomeClass" %d 显示日志记录时间， {<日期格式>}使用ISO8601定义的日期格式 %d{yyyy/MM/dd 
	HH:mm:ss,SSS} 2005/10/12 22:23:30,117 %d{ABSOLUTE} 22:23:30,117 %d{DATE} 
	12 Oct 2005 22:23:30,117 %d{ISO8601} 2005-10-12 22:23:30,117 %F 显示调用logger的源文件名 
	%F MyClass.java %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数 %l MyClass.main(MyClass.java:129) 
	%L 显示调用logger的代码行 %L 129 %m 显示输出消息 %m This is a message for debug. %M 显示调用logger的方法名 
	%M main %n 当前平台下的换行符 %n Windows平台下表示rn UNIX平台下表示n %p 显示该条日志的优先级 %p INFO %r 
	显示从程序启动时到记录该条日志时已经经过的毫秒数 %r 1215 %t 输出产生该日志事件的线程名 %t MyClass %x 按NDC（Nested 
	Diagnostic Context，线程堆栈）顺序输出日志 假设某程序调用顺序是MyApp调用com.foo.Bar %X 按MDC（Mapped 
	Diagnostic Context，线程映射表）输出日志。通常用于多个客户端连接同一台服务器，方便服务器区分是那个客户端访问留下来的日志。 %X{5} 
	（记录代号为5的客户端的日志） %% 显示一个百分号 %% % -->